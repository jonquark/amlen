---
- name: Create the configmap
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
  vars:
    cr_file: 'selfsigned.yaml'

- name: Create the configmap
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
  vars:
    cr_file: 'config.yaml'

- name: Create the amlen.com/v1alpha1.Amlen
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 600
    wait_condition:
      type: Successful
      status: "True"
  vars:
    cr_file: '_v1alpha1_amlen.yaml'

- name: Expose the insecure hello-world service externally
  community.okd.openshift_route:
    service: amlen-1-mqtt
    namespace: '{{ namespace }}'
  register: route

- name: get service
  k8s_info:
    kind: Service
    namespace: '{{ namespace }}'
    name: "amlen-1-mqtt"
  register: service

- name: get certs
  k8s_info:
    kind: Secret
    name: "amlen-1-cert-internal"
    namespace: "{{ namespace }}"
  register: certs

- name: store cacert
  copy:
    content: "{{certs.resources[0].data['ca.crt']|b64decode}}"
    dest: "./ca.crt"

- name: store tlscert
  copy:
    content: "{{certs.resources[0].data['tls.crt']|b64decode}}"
    dest: "./tls.crt"

- name: store tlskey
  copy:
    content: "{{certs.resources[0].data['tls.key']|b64decode}}"
    dest: "./tls.key"

- name: run test
  subscribeTest:
    clientid: "test1"
    host: "{{route.result.spec.host}}"
    insecure: True
    use-tls: True
    topic: "testtopic"
    port: "{{service.resources[0].spec.ports[0].nodePort}}"
    ca.crt: "./ca.crt"
    tls.crt: "./tls.crt"
    tls.key: "./tls.key"

- name: delete cert files
  file:
    path: "{{ item }}"
    state: absent
  loop:
  - "./ca.crt"
  - "./tls.crt"
  - "./tls.key"
